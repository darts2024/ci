name: Release Genr Tags

on:
  pull_request:
  push:
    branches-ignore:
      - "release-tags"
      - "dev"

permissions:
  contents: write

jobs:
  genr-tags-branch:
    runs-on: ubuntu-latest
    #    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/release/')
    # if: github.ref_name != 'release-tags'
    if: false 
    # already taken care of in 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 3
          fetch-tags: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          repository: darts2024/darts
          submodules: false
          #          don't fetch tag for manual flow
          # fetch-tags: ${{ github.event_name != 'workflow_dispatch' }}
          fetch-tags: true
          fetch-depth: 2
          persist-keys: true
          path: ./darts

      - name: For Main
        if: github.ref == 'refs/heads/main'
        run: |
          git tag v0.0.0-latest -f
          git push --tags -f
          # cd ./darts
          # git tag v0.0.0-latest -f
          # git push --tags -f

      - name: For Branches
        run: |
          #CUR_TAG=$(git describe --tags --abbrev=0 --match 'v[0-9]*.[0-9]*.[0-9]*' --exclude '*-*')
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME//\//-}
          #BRANCH_NAME="$CUR_TAG-br$BRANCH_NAME"
          BRANCH_NAME="v0.0.0-br-$BRANCH_NAME"
          git tag "$BRANCH_NAME" -f
          git push --tags -f   

          # cd darts
          # #CUR_TAG=$(git describe --tags --abbrev=0 --match 'v[0-9]*.[0-9]*.[0-9]*' --exclude '*-*')
          # BRANCH_NAME=${GITHUB_REF#refs/heads/}
          # BRANCH_NAME=${BRANCH_NAME//\//-}
          # #BRANCH_NAME="$CUR_TAG-br$BRANCH_NAME"
          # BRANCH_NAME="v0.0.0-br-$BRANCH_NAME"
          # git tag "$BRANCH_NAME" -f
          # git push --tags -f

  genr-tags-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: For PRs
        if: github.event_name == 'pull_request'
        run: |
          CUR_TAG=$(git describe --tags --abbrev=0 --match 'v[0-9]*.[0-9]*.[0-9]*' --exclude '*-*')
          PR_NUMBER=$(echo "$GITHUB_REF" | awk -F / '{print $3}')
          PR_TAG="v0.0.0-pr$PR_NUMBER"
          git tag "$PR_TAG" -f
          git push --tags -f

  release-snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          repository: darts2024/darts
          fetch-depth: 3
          submodules: false
          ref: ${{ github.ref_name == 'dev' && 'main' || github.ref_name }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Run GoReleaser
        continue-on-error: true
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          install-only: false

          args: build --clean --snapshot

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: darts
          path: ./dist/*
